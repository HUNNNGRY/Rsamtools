Update Rsamtools to use htslib 1.7
==================================

Some context
------------

Rsamtools 1.33.0 contains a copy of an old (8-10 year old?) version of the
samtools and tabix C code.

The latest version of samtools is 1.8 (as of May 9, 2018):

  http://www.htslib.org/

In the recent years the samtools code has been split into samtools + htslib.
Most of the code that used to be in samtools is now in htslib. The latest
version of htslib is also 1.8.

Note that a decently recent version of htslib (version 1.7) is wrapped in a
Bioconductor package: Rhtslib

samtools functions and data structures used in Rsamtools
--------------------------------------------------------

As a first pass, let's identify the subset of the old samtools API that is
used by Rsamtools 1.33.0 and, for each symbol, report its status in htslib 1.7:

  Used in Rsamtools                Status in htslib 1.7
  -------------------------------  ----------------------------------------
  bam_init1           (bam.h)      yes (sam.h)
  bam_destroy1        (bam.h)      yes (sam.h)
  bam_index_build     (bam.h)      yes (sam.h)
  bam_index_load      (bam.h)      yes (sam.h)
  bam_index_destroy   (bam.h)      NO
  bam_dup1            (bam.h)      yes (sam.h)

  samopen             (sam.h)      NO -- replaced with sam_open    (sam.h)
  samclose            (sam.h)      NO -- replaced with sam_close   (sam.h)
  samread             (sam.h)      NO -- replaced with sam_read1?  (sam.h)
  samwrite            (sam.h)      NO -- replaced with sam_write1? (sam.h)

  bam1_qual           (bam.h)      NO -- replaced with bam_get_qual? (sam.h)
  bam1_strand         (bam.h)      NO -- replaced with bam_is_rev? (sam.h)
  bam1_seq            (bam.h)      NO -- replaced with bam_get_seq (sam.h)
  bam1_seqi           (bam.h)      NO -- probably implemented/easy to implment
  bam1_cigar          (bam.h)      NO -- replaced with bam_get_cigar? (sam.h)
  bam1_qname          (bam.h)      NO -- seems simple
  bam_cigar2qlen      (bam.h)      YES
  bam_tell            (bam.h)      NO -- replaced with bgzf_tell? (bgzf.h)
  bam_open            (bam.h)      NO -- replaced with bgzf_open? (bgzf.h)
  bam_read            (bam.h)      NO -- replaced with bgzf_read? (bgzf.h)
  bam_seek            (bam.h)      NO -- replaced with bgzf_seek? (bgzf.h)
  bam_header_read     (bam.h)      NO
  bam_header_destory  (bam.h)      NO
  bam_read1           (bam.h)      YES
  bam_init1           (bam.h)      YES
  bam_dup1            (bam.h)      YES
  bam_get_tid         (bam.h)      NO
  bam_mplp_init       (bam.h)      YES
  bam_mplp_set_maxcnt (bam.h)      YES
  bam_iter_query      (bam.h)      NO
  bam_iter_destroy    (bam.h)      NO
  bam_iter_read       (bam.h)      NO
  bam_mplp_destroy    (bam.h)      YES
  bam_aux2i           (bam.h)      YES
  bam_aux2A           (bam.h)      YES
  bam_aux2d           (bam.h)      NO -- replaced with bam_aux2f
  bam_aux2f           (bam.h)      YES
  bam_aux2Z           (bam.h)      YES
  bam_plp_set_maxcont (bam.h)      YES
  bam_plbuf_init      (bam.h)      YES
  bam_aux_get         (bam.h)      YES

  bgzf_seek           (bgzf.h)     YES
  bgzf_tell           (bgzf.h)     YES
  bgzf_dopen          (bgzf.h)     YES
  bgzf_close          (bgzf.h)     YES
  bgzf_write          (bgzf.h)     YES

  vcf_hdr_read        (bcf.h)      YES
  vcf_read            (bcf.h)      YES
  vcf_hdr_write       (bcf.h)      YES
  vcf_write           (bcf.h)      YES
  vcf_dictread        (bcf.h)      NO
  bcf_hdr_destroy     (bcf.h)      YES
  bcf_destroy         (bcf.h)      YES
  bcf_build_refhash   (bcf.h)      NO
  bcf_str2id          (bcf.h)      NO
  bcf_str2id_destroy  (bcf.h)      NO
  bcf_idx_build       (bcf.h)      NO
  bcf_idx_query       (bcf.h)      NO

  faidx_fetch_seq2    (faidx.h)    NO

  khash_t             (khash.h)    YES
  kh_get              (khash.h)    YES
  kh_begin            (khash.h)    YES
  kh_end              (khash.h)    YES
  kh_put              (khash.h)    YES
  kh_val              (khash.h)    YES
  kh_value            (khash.h)    YES
  kh_destroy          (khash.h)    YES
  kh_exist            (khash.h)    YES

  BAM_CIGAR_STR       (bam.h)      YES
  BAM_CIGAR_MASK      (bam.h)      YES
  BAM_FUNMAP          (bam.h)      YES
  BAM_FMUNMAP         (bam.h)      YES


Tip: To find the header files where a samtools function is defined (e.g. the
bam_init1 function):

    find . -type d -name '.git' -prune -o -type f -name '*.h' -exec grep -Hw 'bam_init1' {} \;

Run the above command twice, once in Rsamtools/src and once in
Rhtslib/src/htslib-1.7 to find the header file in Rsamtools and in htslib-1.7,
respectively.

We might also run into data structure changes. They should only create problems
if Rsamtools C/C++ code access members that have changed e.g. have been
removed, renamed, or their type has changed.

Migration status, file by file
------------------------------

C files (17 files, ignoring the *_stubs.c files):

  File                 Status            Assigned to
  -------------------  ----------------  -----------
  as_bam.c             TO DO
  bambuffer.c          TO DO
  bam_data.c           TO DO
  bamfile.c            TO DO
  bcffile.c            TO DO
  encode.c             nothing to do
  fafile.c             TO DO
  idxstats.c           TO DO
  io_sam.c             TO DO
  pileupbam.c          TO DO
  R_init_Rsamtools.c   TO DO
  samtools_patch.c     nothing to do
  scan_bam_data.c      TO DO
  tabixfile.c          TO DO
  tagfilter.c          done
  utilities.c          done
  zip_compression.c    TO DO

C++ files (6 files):

  File                 Status            Assigned to
  -------------------  ----------------  -----------
  bam_mate_iter.cpp    TO DO
  pbuffer_wrapper.cpp  nothing to do
  PileupBuffer.cpp     TO DO
  pileup.cpp           TO DO
  PosCacheColl.cpp     nothing to do
  ResultManager.cpp    nothing to do

Compilation of code that doesn't compile yet was disabled by putting it inside
#ifdef statements e.g.:

  #ifdef MIGRATE_ME
  ...
  ... code that needs to be fixed ...
  ...
  #endif  /* MIGRATE_ME */

